<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zcy.blog.dao.BlogUserMapper">
	<resultMap id="BaseResultMap" type="com.zcy.blog.model.BlogUser">
		<id column="USER_ID" property="userId" jdbcType="DECIMAL" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="EMAIL" property="email" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="NICK_NAME" property="nickName" jdbcType="VARCHAR" />
		<result column="GENDER" property="gender" jdbcType="CHAR" />
		<result column="BIRTHDAY" property="birthday" jdbcType="TIMESTAMP" />
		<result column="QQ" property="qq" jdbcType="VARCHAR" />
		<result column="HEAD_PATH" property="headPath" jdbcType="VARCHAR" />

		<!-- 一对多配置，建立集合，集合中存放多表对应的对象 -->
		<!-- property是实体类中的集合的名字，ofType是集合中存放的对象的全限定名称 -->
		<collection property="blogList" ofType="com.zcy.blog.model.Blog">
			<!-- id用于定义主表的唯一标识，是从表识别主表主键的唯一标识，column是结果集对应的字段名 -->
			<id column="BLOG_ID" property="blogId" jdbcType="DECIMAL" />
			<result column="BLOG_TITLE" property="blogTitle" jdbcType="VARCHAR" />
			<result column="PUBLISH_DATE" property="publishDate" jdbcType="TIMESTAMP" />
			<result column="READ_COUNTS" property="readCounts" jdbcType="DECIMAL" />
			<result column="COMMENT_COUNTS" property="commentCounts"
				jdbcType="DECIMAL" />
			<result column="B_USER_ID" property="userId" jdbcType="DECIMAL" />
			<result column="BLOG_CONTENT" property="blogContent" jdbcType="CLOB" />
		</collection>

		<!-- 配置爱好 -->
		<collection property="hobbyList" ofType="com.zcy.blog.model.Hobby">
			<id column="HOBBY_ID" property="hobbyId" jdbcType="DECIMAL" />
			<result column="HOBBY_NAME" property="hobbyName" jdbcType="VARCHAR" />
		</collection>

	</resultMap>
	<sql id="Base_Column_List">
		USER_ID, USER_NAME, EMAIL, PASSWORD, NICK_NAME, GENDER,
		BIRTHDAY, QQ,
		HEAD_PATH
	</sql>

	<!-- 关联查询用户信息，将用户发表的博客查询出来 -->
	<select id="getBlogUserInfo" parameterType="com.zcy.blog.model.BlogUser"
		resultMap="BaseResultMap">
		select u.*,b.USER_ID as B_USER_ID,b.BLOG_ID,b.BLOG_TITLE,b.BLOG_CONTENT,b.PUBLISH_DATE,b.READ_COUNTS,b.COMMENT_COUNTS,h.*
		from BLOG_USER u
		left outer join BLOG b
		on u.USER_ID = b.USER_ID
		left outer join USER_HOBBY uh
		on u.USER_ID = uh.USER_ID
		left outer join HOBBY h
		on h.HOBBY_ID = uh.HOBBY_ID
		where u.USER_ID = #{userId,jdbcType=DECIMAL}  ORDER BY b.PUBLISH_DATE DESC
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from BLOG_USER
		where USER_ID = #{userId,jdbcType=DECIMAL}
	</select>
	<!-- 根据用户名查找用户 -->
	<select id="selectByUserName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from BLOG_USER
		where USER_NAME = #{userName,jdbcType=VARCHAR}
	</select>
	<!-- 根据邮箱查找用户 -->
	<select id="selectByEmail" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from BLOG_USER
		where EMAIL = #{email,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		BLOG_USER
		where USER_ID = #{userId,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="com.zcy.blog.model.BlogUser">
		<selectKey resultType="java.lang.Integer" order="BEFORE"
			keyProperty="userId">
			select seq_user_id.nextval from dual
		</selectKey>
		insert into BLOG_USER (USER_ID, USER_NAME, EMAIL,
		PASSWORD, NICK_NAME,
		GENDER,
		BIRTHDAY, QQ,
		HEAD_PATH)
		values
		(#{userId,jdbcType=DECIMAL},
		#{userName,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR},
		#{gender,jdbcType=CHAR},
		#{birthday,jdbcType=TIMESTAMP},
		#{qq,jdbcType=VARCHAR},
		#{headPath,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.zcy.blog.model.BlogUser">
		<selectKey resultType="java.lang.Integer" order="BEFORE"
			keyProperty="userId">
			select seq_user_id.nextval from dual
		</selectKey>
		insert into BLOG_USER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="userName != null">
				USER_NAME,
			</if>
			<if test="email != null">
				EMAIL,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="nickName != null">
				NICK_NAME,
			</if>
			<if test="gender != null">
				GENDER,
			</if>
			<if test="birthday != null">
				BIRTHDAY,
			</if>
			<if test="qq != null">
				QQ,
			</if>
			<if test="headPath != null">
				HEAD_PATH,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=DECIMAL},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=CHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="qq != null">
				#{qq,jdbcType=VARCHAR},
			</if>
			<if test="headPath != null">
				#{headPath,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zcy.blog.model.BlogUser">
		update BLOG_USER
		<set>
			<if test="userName != null">
				USER_NAME = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				EMAIL = #{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				NICK_NAME = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				GENDER = #{gender,jdbcType=CHAR},
			</if>
			<if test="birthday != null">
				BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="qq != null">
				QQ = #{qq,jdbcType=VARCHAR},
			</if>
			<if test="headPath != null">
				HEAD_PATH = #{headPath,jdbcType=VARCHAR},
			</if>
		</set>
		where USER_ID = #{userId,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zcy.blog.model.BlogUser">
		update BLOG_USER
		set USER_NAME = #{userName,jdbcType=VARCHAR},
		EMAIL =
		#{email,jdbcType=VARCHAR},
		PASSWORD = #{password,jdbcType=VARCHAR},
		NICK_NAME = #{nickName,jdbcType=VARCHAR},
		GENDER =
		#{gender,jdbcType=CHAR},
		BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
		QQ =
		#{qq,jdbcType=VARCHAR},
		HEAD_PATH =
		#{headPath,jdbcType=VARCHAR}
		where
		USER_ID = #{userId,jdbcType=DECIMAL}
	</update>
</mapper>