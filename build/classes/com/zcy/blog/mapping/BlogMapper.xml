<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zcy.blog.dao.BlogMapper">
	<resultMap id="BaseResultMap" type="com.zcy.blog.model.Blog">
		<id column="BLOG_ID" property="blogId" jdbcType="DECIMAL" />
		<result column="BLOG_TITLE" property="blogTitle" jdbcType="VARCHAR" />
		<result column="PUBLISH_DATE" property="publishDate" jdbcType="TIMESTAMP" />
		<result column="READ_COUNTS" property="readCounts" jdbcType="DECIMAL" />
		<result column="COMMENT_COUNTS" property="commentCounts"
			jdbcType="DECIMAL" />
		<result column="B_USER_ID" property="userId" jdbcType="DECIMAL" />
		<!-- 一对一的关系 -->
		<!-- property: 指的是属性的值, javaType：指的是元素的类型 -->
		<association property="blogUser" javaType="com.zcy.blog.model.BlogUser">
			<id column="USER_ID" property="userId" jdbcType="DECIMAL" />
			<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
			<result column="EMAIL" property="email" jdbcType="VARCHAR" />
			<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
			<result column="NICK_NAME" property="nickName" jdbcType="VARCHAR" />
			<result column="GENDER" property="gender" jdbcType="CHAR" />
			<result column="BIRTHDAY" property="birthday" jdbcType="TIMESTAMP" />
			<result column="QQ" property="qq" jdbcType="VARCHAR" />
			<result column="HEAD_PATH" property="headPath" jdbcType="VARCHAR" />
		</association>

		<!-- 一对多配置，建立集合，集合中存放多表对应的对象 -->
		<!-- property是实体类中的集合的名字，ofType是集合中存放的对象的全限定名称 -->
		<collection property="commentList" ofType="com.zcy.blog.model.BlogComment">
			<!-- id用于定义主表的唯一标识，是从表识别主表主键的唯一标识，column是结果集对应的字段名 -->
			<id column="COMMENT_ID" property="commentId" jdbcType="DECIMAL" />
			<result column="PARENT_ID" property="parentId" jdbcType="DECIMAL" />
			<result column="THREAD" property="thread" jdbcType="VARCHAR" />
			<result column="COMMENT_DATE" property="commentDate" jdbcType="TIMESTAMP" />
			<result column="USER_ID" property="userId" jdbcType="DECIMAL" />
			<result column="BLOG_ID" property="blogId" jdbcType="DECIMAL" />
			<result column="DEPTH" property="depth" jdbcType="DECIMAL" />
			<result column="COMMENT_CONTENT" property="commentContent"
			jdbcType="CLOB" />
		</collection>


	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.zcy.blog.model.Blog"
		extends="BaseResultMap">
		<result column="BLOG_CONTENT" property="blogContent" jdbcType="CLOB" />
	</resultMap>
	<sql id="Base_Column_List">
		BLOG_ID, BLOG_TITLE, PUBLISH_DATE, READ_COUNTS,
		COMMENT_COUNTS, USER_ID
	</sql>
	<sql id="Blob_Column_List">
		BLOG_CONTENT
	</sql>
	<!-- 根据blogId查找博客 -->
	<select id="getBlogInfoById" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select u.*,b.USER_ID as "B_USER_ID",
		b.BLOG_ID,b.BLOG_TITLE,b.BLOG_CONTENT,b.PUBLISH_DATE,b.READ_COUNTS,b.COMMENT_COUNTS
		from BLOG_USER u
		left outer join
		BLOG b
		on u.USER_ID = b.USER_ID
		where b.BLOG_ID=#{blogId,jdbcType=DECIMAL}
	</select>

	<!-- 根据用户发表过的评论的id查找博客 -->

	<select id="getBlogInfoByUserId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select * from blog
		where blog_id=
		(select
		blog_comment.blog_id from blog_comment where user_id =
		#{userId,jdbcType=DECIMAL})
	</select>

	<!-- 查找用户发布的所有博客 -->
	<select id="getBlogInfos" resultMap="ResultMapWithBLOBs">
		select u.*,b.USER_ID as
		"B_USER_ID",
		b.BLOG_ID,b.BLOG_TITLE,b.BLOG_CONTENT,b.PUBLISH_DATE,b.READ_COUNTS,b.COMMENT_COUNTS
		from BLOG_USER u,BLOG b
		where u.USER_ID = b.USER_ID ORDER BY
		b.PUBLISH_DATE DESC
	</select>
	<!-- 查找所有的blog的总记录数 -->
	<select id="findBlogCount" resultType="java.lang.Integer">
		select count(*) from blog
	</select>
	<!-- 分页查找发布的所有博客 -->
	<select id="findBlogsByPage" resultMap="ResultMapWithBLOBs">
		select u.*,b.USER_ID as
		"B_USER_ID",b.BLOG_ID,b.BLOG_TITLE,b.BLOG_CONTENT,b.PUBLISH_DATE,b.READ_COUNTS,b.COMMENT_COUNTS
		from BLOG_USER u,BLOG b
		where u.USER_ID = b.USER_ID ORDER BY
		b.PUBLISH_DATE DESC
	</select>

	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from BLOG
		where BLOG_ID = #{blogId,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from BLOG
		where BLOG_ID = #{blogId,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="com.zcy.blog.model.Blog">

		<selectKey resultType="java.lang.Integer" order="BEFORE"
			keyProperty="blogId">
			select seq_blog_id.nextval from dual
		</selectKey>

		insert into BLOG (BLOG_ID, BLOG_TITLE, PUBLISH_DATE,
		READ_COUNTS,
		COMMENT_COUNTS, USER_ID,
		BLOG_CONTENT)
		values
		(#{blogId,jdbcType=DECIMAL}, #{blogTitle,jdbcType=VARCHAR},
		#{publishDate,jdbcType=TIMESTAMP},
		#{readCounts,jdbcType=DECIMAL},
		#{commentCounts,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL},
		#{blogContent,jdbcType=CLOB})
	</insert>
	<!-- 向博客表中插入数据 -->
	<insert id="insertSelective" parameterType="com.zcy.blog.model.Blog">
		<selectKey resultType="java.lang.Integer" order="BEFORE"
			keyProperty="blogId">
			select seq_blog_id.nextval from dual
		</selectKey>

		insert into BLOG
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="blogId != null">
				BLOG_ID,
			</if>
			<if test="blogTitle != null">
				BLOG_TITLE,
			</if>
			<if test="publishDate != null">
				PUBLISH_DATE,
			</if>
			<if test="readCounts != null">
				READ_COUNTS,
			</if>
			<if test="commentCounts != null">
				COMMENT_COUNTS,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="blogContent != null">
				BLOG_CONTENT,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="blogId != null">
				#{blogId,jdbcType=DECIMAL},
			</if>
			<if test="blogTitle != null">
				#{blogTitle,jdbcType=VARCHAR},
			</if>
			<if test="publishDate != null">
				#{publishDate,jdbcType=TIMESTAMP},
			</if>
			<if test="readCounts != null">
				#{readCounts,jdbcType=DECIMAL},
			</if>
			<if test="commentCounts != null">
				#{commentCounts,jdbcType=DECIMAL},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=DECIMAL},
			</if>
			<if test="blogContent != null">
				#{blogContent,jdbcType=CLOB},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zcy.blog.model.Blog">
		update BLOG
		<set>
			<if test="blogTitle != null">
				BLOG_TITLE = #{blogTitle,jdbcType=VARCHAR},
			</if>
			<if test="publishDate != null">
				PUBLISH_DATE = #{publishDate,jdbcType=TIMESTAMP},
			</if>
			<if test="readCounts != null">
				READ_COUNTS = #{readCounts,jdbcType=DECIMAL},
			</if>
			<if test="commentCounts != null">
				COMMENT_COUNTS = #{commentCounts,jdbcType=DECIMAL},
			</if>
			<if test="userId != null">
				USER_ID = #{userId,jdbcType=DECIMAL},
			</if>
			<if test="blogContent != null">
				BLOG_CONTENT = #{blogContent,jdbcType=CLOB},
			</if>
		</set>
		where BLOG_ID = #{blogId,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zcy.blog.model.Blog">
		update
		BLOG
		set BLOG_TITLE = #{blogTitle,jdbcType=VARCHAR},
		PUBLISH_DATE =
		#{publishDate,jdbcType=TIMESTAMP},
		READ_COUNTS =
		#{readCounts,jdbcType=DECIMAL},
		COMMENT_COUNTS =
		#{commentCounts,jdbcType=DECIMAL},
		USER_ID =
		#{userId,jdbcType=DECIMAL},
		BLOG_CONTENT = #{blogContent,jdbcType=CLOB}
		where BLOG_ID = #{blogId,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zcy.blog.model.Blog">
		update BLOG
		set
		BLOG_TITLE = #{blogTitle,jdbcType=VARCHAR},
		PUBLISH_DATE =
		#{publishDate,jdbcType=TIMESTAMP},
		READ_COUNTS =
		#{readCounts,jdbcType=DECIMAL},
		COMMENT_COUNTS =
		#{commentCounts,jdbcType=DECIMAL},
		USER_ID = #{userId,jdbcType=DECIMAL}
		where BLOG_ID = #{blogId,jdbcType=DECIMAL}
	</update>
</mapper>